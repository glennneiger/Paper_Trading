{"version":3,"sources":["Copyright/Copyright.tsx","HTTPClient/HTTPClient.tsx","SignIn/SignIn.tsx","SignUp/SignUp.tsx","ForgotPassword/ForgotPassword.tsx","Dashboard/Menu.tsx","Dashboard/Component/ComponentBalance.tsx","Dashboard/Component/ComponentUSMarket.tsx","Dashboard/Component/ComponentAccountSnapshot.tsx","Dashboard/Component/ComponentUSMarketChart.tsx","Dashboard/Windows/WindowDashboard.tsx","Dashboard/Component/ComponentPortfolio.tsx","Dashboard/Windows/WindowPortfolio.tsx","Dashboard/Component/ComponentTrade.tsx","Dashboard/Component/ComponentTradeData.tsx","Dashboard/Windows/WindowTrade.tsx","Dashboard/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","API_URL","window","location","protocol","host","email","params","user_email","axios","get","then","response","data","token","symbol","password","user_password","post","firstName","lastName","user_first_name","user_last_name","quantity","sale","useStyles","makeStyles","theme","root","height","error","backgroundColor","palette","dark","icon","fontSize","opacity","marginRight","spacing","message","display","alignItems","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","brand","margin","filter","slogan","paper","flexDirection","avatar","secondary","main","form","width","marginTop","submit","pointer","cursor","SignIn","props","classes","React","useState","inputEmail","setInputEmail","inputPassword","setInputPassword","errorMessage","setErrorMessage","errorOpen","setErrorOpen","signInHandler","event","a","preventDefault","HTTPClient","success","setId","id","setFirstName","first_name","setLastName","last_name","setToken","setPage","Grid","container","component","className","CssBaseline","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","action","IconButton","key","aria-label","onClick","item","xs","sm","md","lg","xl","Hidden","smDown","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","value","type","FormControlLabel","control","Checkbox","Button","Box","mt","SignUp","inputFirstName","setInputFirstName","inputLastName","setInputLastName","signUpHandler","validator","matches","isEmail","justify","body","common","white","ForgotPassword","setEmail","Container","maxWidth","result","console","log","listItemIcon","listItemText","Menu","ListItem","button","setWindow","ListItemIcon","ListItemText","primary","depositContext","flex","Balance","portfolio","setPortfolio","useEffect","Fragment","gutterBottom","netAssets","toFixed","replace","rows","lastPrice","change","changePercentage","seeMore","USMarket","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","subject","ComponentUSMarketChart","chartType","loader","rootProps","appBarSpacer","mixins","toolbar","content","flexGrow","overflow","paddingTop","paddingBottom","padding","fixedHeight","WindowDashboard","fixedHeightPaper","clsx","ComponentBalance","ComponentAccountSnapshot","ComponentUSMarket","valueUp","valueDown","toCommas","ComponentPortfolio","portfolioHoldingItems","portfolioHolding","holding","Math","abs","pricePaid","dayGain","totalGain","totalGainPercentage","WindowPortfolio","green","actionOptions","ComponentTrade","setAction","setQuantity","successOpen","setSuccessOpen","tradeHandler","setSymbol","cause","textField","select","option","MenuItem","parseInt","disabled","justifyContent","ComponentTradeData","stockInfo","setStateInfo","GridList","gridList","cols","cellHeight","List","stockQuote","companyName","primaryExchange","Divider","stockStats","peRatio","ttmEPS","beta","marketcap","latestPrice","previousClose","changePercent","week52Low","week52High","paddingRight","toolbarIcon","appBar","background","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","menuButtonHidden","title","iconButton","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","Dashboard","setOpen","AppBar","Toolbar","edge","noWrap","appBarTitleSelectionHandler","Badge","badgeContent","Drawer","WindowTrade","windowSelectionHandler","App","page","getPageHandler","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75b77e68.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Typography } from '@material-ui/core';\n\nconst Copyright: () => JSX.Element = () =>  {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://ai-zixun.com/\">\n                ai-zixun.com\n            </Link>\n            {' '}{new Date().getFullYear()}{'.'}\n        </Typography>\n    );\n}\n\nexport default Copyright;\n","import axios from 'axios'; \n\nconst API_URL: string = `${window.location.protocol}//${window.location.host}`;\n//const API_URL: string = 'http://localhost:5050';\n\nconst getUserEmailExist: (email: string) => Promise<any> = (email) => {\n    let params = {\n        params: {\n            user_email: email, \n        }\n    }\n    return axios.get(API_URL + '/api/user/email_exist', params)\n        .then(response => {return response.data});\n}\n\nconst getUserPortfolio: (token: string) => Promise<any> = (token) => {\n    let params = {\n        params: {\n            token: token, \n        }\n    }\n    return axios.get(API_URL + '/api/user/portfolio', params)\n        .then(response => {return response.data});\n}\n\nconst getStockInfo: (token: string, symbol: string) => Promise<any> = (token, symbol) => {\n    let params = {\n        params: {\n            token: token, \n            symbol: symbol\n        }\n    }\n    return axios.get(API_URL + '/api/stock/info', params)\n        .then(response => {return response.data});\n}\n\nconst postUserSignIn: (email: string, password: string) => Promise<any> = (email, password) => {\n    let data = {\n        user_email: email,\n        user_password: password, \n    }\n    return axios.post(API_URL + '/api/user/sign_in', data)\n        .then(response => {return response.data});\n}\n\nconst postUserSignUp: (firstName: string, lastName: string, email: string, password: string) => Promise<any> = (firstName, lastName, email, password) => {\n    let data = {\n        user_first_name: firstName,\n        user_last_name: lastName,\n        user_email: email,\n        user_password: password, \n    }\n    return axios.post(API_URL + '/api/user/sign_up', data)\n        .then(response => {return response.data});\n}\n\nconst postOrder: (token: string, symbol: string, quantity: number, sale: boolean) => Promise<any> = (token, symbol, quantity, sale) => {\n    let data = {\n        token: token,\n        symbol: symbol,\n        quantity: quantity,\n        sale: sale,\n    }\n    return axios.post(API_URL + '/api/user/order', data)\n        .then(response => {return response.data});\n}\n\nexport default {\n    getUserEmailExist, \n    getUserPortfolio, \n    getStockInfo, \n    postUserSignIn, \n    postUserSignUp,\n    postOrder\n};","import React from 'react';\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Paper, Box, Grid, Typography, Hidden, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Copyright from '../Copyright/Copyright';\nimport HTTPClient from '../HTTPClient/HTTPClient';\n\nconst useStyles: (props?: any) => Record<any, string> = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    icon: {\n        fontSize: 20,\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    }, \n    image: {\n        backgroundImage: 'url(./img/sign-in.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'left',\n    },\n    brand: {\n        margin: theme.spacing(5, 10),\n        color: '#ffffff',\n        filter: 'brightness(100%)',\n    },\n    slogan: {\n        margin: theme.spacing(0, 10),\n        color: '#ffffff',\n        filter: 'brightness(100%)',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    pointer: {\n        cursor: 'pointer',\n    },\n}));\n\ninterface Props {\n    setPage: React.Dispatch<React.SetStateAction<string>>;\n    setId: React.Dispatch<React.SetStateAction<number>>;\n    setToken: React.Dispatch<React.SetStateAction<string>>;\n    setFirstName: React.Dispatch<React.SetStateAction<string>>;\n    setLastName: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst SignIn: React.FC<Props> = props => {\n    const classes = useStyles();\n\n    const [inputEmail, setInputEmail] = React.useState<string>('');\n    const [inputPassword, setInputPassword] = React.useState<string>('');\n    const [errorMessage, setErrorMessage] = React.useState<string>('');\n    const [errorOpen, setErrorOpen] = React.useState<boolean>(false);\n\n\n    const signInHandler: (event: React.MouseEvent<any>) => void = async event => {\n        event.preventDefault(); \n\n        interface Response {\n            success: boolean,\n            id: number, \n            first_name: string, \n            last_name: string,\n            token: string, \n        }\n\n        if (! await HTTPClient.getUserEmailExist(inputEmail)) {\n            setErrorMessage('It appears there\\'s no account associated with this email!');\n            setErrorOpen(true);\n        }\n        else {\n            let response: Response = await HTTPClient.postUserSignIn(inputEmail, inputPassword); \n            if (!response.success) {\n                setErrorMessage('It appears the entered password is incorrect');\n                setErrorOpen(true);\n            }\n            else {\n                props.setId(response.id);\n                props.setFirstName(response.first_name);\n                props.setLastName(response.last_name);\n                props.setToken(response.token);\n                props.setPage('dashboard');\n            }\n        }\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                open={errorOpen}\n                autoHideDuration={9000}\n                onClose={() => { setErrorOpen(false) }}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    message={\n                        <span id=\"client-snackbar\" className={classes.message}>\n                            <ErrorIcon className={classes.icon}\n                            />\n                            {errorMessage}\n                        </span>\n                    }\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={() => { setErrorOpen(false) }}>\n                            <CloseIcon className={classes.icon} />\n                        </IconButton>,\n                    ]}\n                />\n            </ Snackbar>\n            <Grid item xs={false} sm={4} md={7} lg={8} xl={9} className={classes.image} >\n                <Hidden smDown={true}>\n                    <div className={classes.slogan}>\n                        <Typography variant=\"h1\" className={classes.brand}>\n                            Paper Trading\n                        </Typography>\n                        <Typography variant=\"h3\" className={classes.slogan}>\n                            A sumptuous stock trading simulator.\n                        </Typography>\n                    </div>\n                </Hidden>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} lg={4} xl={3} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <PowerSettingsNewIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={event => setInputEmail(event.target.value)}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={event => setInputPassword(event.target.value)}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={signInHandler}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link\n                                    variant=\"body2\"\n                                    onClick={() => { props.setPage('forgot-password') }}\n                                >\n                                    Forgot password?\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link\n                                    variant=\"body2\"\n                                    className={classes.pointer}\n                                    onClick={() => { props.setPage('sign-up') }}\n                                >\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright />\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default SignIn;","import React from 'react';\nimport { Avatar, Button, CssBaseline, TextField, Link, Paper, Box, Grid, Typography, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Copyright from '../Copyright/Copyright';\nimport HTTPClient from '../HTTPClient/HTTPClient';\nimport validator from 'validator'; \n\nconst useStyles: (props?: any) => Record<string, string> = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    icon: {\n        fontSize: 20,\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    }, \n    image: {\n        backgroundImage: 'url(./img/sign-up.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    pointer: {\n        cursor: 'pointer',\n    },\n}));\n\ninterface Props {\n    setPage: React.Dispatch<React.SetStateAction<string>>;\n    setId: React.Dispatch<React.SetStateAction<number>>;\n    setToken: React.Dispatch<React.SetStateAction<string>>;\n    setFirstName: React.Dispatch<React.SetStateAction<string>>;\n    setLastName: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst SignUp: React.FC<Props> = props => {\n    const classes = useStyles();\n\n    const [inputFirstName, setInputFirstName] = React.useState<string>('');\n    const [inputLastName, setInputLastName] = React.useState<string>('');\n    const [inputEmail, setInputEmail] = React.useState<string>('');\n    const [inputPassword, setInputPassword] = React.useState<string>('');\n    const [errorMessage, setErrorMessage] = React.useState<string>('');\n    const [errorOpen, setErrorOpen] = React.useState<boolean>(false);\n\n    const signUpHandler: (event: React.MouseEvent<any>) => void = async event => {\n        event.preventDefault(); \n\n        interface Response {\n            success: boolean,\n            id: number, \n            first_name: string, \n            last_name: string,\n            token: string, \n        }\n\n        if (!validator.matches(inputFirstName, /^[a-zA-Z]{1,15}$/)) {\n            setErrorMessage('It appears the entered first name format is incorrect. Letters only.');\n            setErrorOpen(true);\n        } \n        else if (!validator.matches(inputLastName, /^[a-zA-Z]{1,15}$/)) {\n            setErrorMessage('It appears the entered last name format is incorrect. Letters only.');\n            setErrorOpen(true);\n        } \n        else if (!validator.isEmail(inputEmail)) {\n            setErrorMessage('It appears the entered email format is incorrect.');\n            setErrorOpen(true);\n        } \n        else if (!validator.matches(inputPassword, /^[a-zA-Z0-9]{5,15}$/)) {\n            setErrorMessage('It appears the entered password format is incorrect. Letters and Numbers only.');\n            setErrorOpen(true);\n        } \n        else {\n            let emailTaken: boolean = await HTTPClient.getUserEmailExist(inputEmail);\n            if (emailTaken) {\n                setErrorMessage('It appears this email is taken!');\n                setErrorOpen(true);\n            }\n            else {\n                let response: Response = await HTTPClient.postUserSignUp(inputFirstName, inputLastName, inputEmail, inputPassword); \n                if (!response.success) {\n                    setErrorMessage('Unknow: Sign Up Error');\n                    setErrorOpen(true);\n                }\n                else {\n                    props.setId(response.id);\n                    props.setFirstName(response.first_name);\n                    props.setLastName(response.last_name);\n                    props.setToken(response.token);\n                    props.setPage('dashboard');\n                }\n            }\n        }\n    }\n\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                open={errorOpen}\n                autoHideDuration={9000}\n                onClose={() => { setErrorOpen(false) }}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    message={\n                        <span id=\"client-snackbar\" className={classes.message}>\n                            <ErrorIcon className={classes.icon}\n                            />\n                            {errorMessage}\n                        </span>\n                    }\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={() => { setErrorOpen(false) }}>\n                            <CloseIcon className={classes.icon} />\n                        </IconButton>,\n                    ]}\n                />\n            </ Snackbar>\n            <Grid item xs={false} sm={4} md={7} lg={8} xl={9} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} lg={4} xl={3} component={Paper} elevation={6} square>\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <AccountCircleIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    onChange={event => setInputFirstName(event.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                    onChange={event => setInputLastName(event.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={event => setInputEmail(event.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={event => setInputPassword(event.target.value)}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={signUpHandler}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link \n                                    variant=\"body2\" \n                                    className={classes.pointer} \n                                    onClick={() => {props.setPage('sign-in')}}\n                                >\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default SignUp;","import React from 'react';\nimport { Avatar, Button, CssBaseline, TextField, Link, Container, Box, Grid, Typography } from '@material-ui/core';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Copyright from '../Copyright/Copyright';\nimport HTTPClient from '../HTTPClient/HTTPClient';\n\nconst useStyles: (props?: any) => Record<string, string>  = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', \n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\ninterface Props {\n    setPage: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst ForgotPassword: React.FC<Props> = (props) => {\n    const classes: Record<string, string> = useStyles();\n    const [email, setEmail]  = React.useState<string>(\"\");\n\n    const submitResetHandler: (event: React.MouseEvent<any>) => void = event => {\n        event.preventDefault();\n        HTTPClient.getUserEmailExist(email).then(result => {console.log(result)}); \n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LoopIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Reset password\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={event => setEmail(event.target.value)}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={submitResetHandler}\n                    >\n                        Reset\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link\n                                variant=\"body2\"\n                                onClick={() => {props.setPage('sign-in')}}\n                            >\n                                Remember password? Sign in. \n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link\n                                variant=\"body2\"\n                                onClick={() => {props.setPage('sign-up')}}\n                            >\n                                Sign up. \n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\nexport default ForgotPassword; ","import React from 'react';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport InputIcon from '@material-ui/icons/Input';\nimport MessageIcon from '@material-ui/icons/Message';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\n\nconst useStyles = makeStyles(theme => ({\n    listItemIcon: {\n        color: '#FFFFFF', \n    },\n    listItemText: {\n        color: '#FFFFFF', \n    }\n}));\n\ninterface Props {\n    setWindow: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst Menu: React.FC<Props> = props => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <div>\n                <ListItem button onClick={() => {props.setWindow('dashboard')}}>\n                    <ListItemIcon className={classes.listItemIcon}>\n                        <DashboardIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\" className={classes.listItemText} />\n                </ListItem>\n                <ListItem button onClick={() => {props.setWindow('portfolio')}}>\n                    <ListItemIcon className={classes.listItemIcon}>\n                        <FormatListBulletedIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Portfolio\" className={classes.listItemText} />\n                </ListItem>\n                <ListItem button onClick={() => {props.setWindow('quote')}}>\n                    <ListItemIcon className={classes.listItemIcon}>\n                        <MessageIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Quote\" className={classes.listItemText} />\n                </ListItem>\n                <ListItem button onClick={() => {props.setWindow('trade')}}>\n                    <ListItemIcon className={classes.listItemIcon}>\n                        <InputIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Trade\" className={classes.listItemText} />\n                </ListItem>\n                <ListItem button onClick={() => {props.setWindow('order')}}>\n                    <ListItemIcon className={classes.listItemIcon}>\n                        <PlaylistAddIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Order\" className={classes.listItemText} />\n                </ListItem>\n                <ListItem button onClick={() => {props.setWindow('transaction')}}>\n                    <ListItemIcon className={classes.listItemIcon}>\n                        <PlaylistAddCheckIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Transaction\" className={classes.listItemText} />\n                </ListItem>\n            </div>\n        </div>\n    );\n}\n\nexport default Menu; ","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport HTTPClient from '../../HTTPClient/HTTPClient';\n\nconst useStyles = makeStyles({\n    depositContext: {\n        flex: 1,\n    },\n});\n\n\n\ninterface PortfolioHolding {\n    symbol: string;\n    lastPrice: number;\n    change: number;\n    changePercentage: number;\n    quantity: number;\n    pricePaid: number;\n    dayGain: number;\n    totalGain: number;\n    totalGainPercentage: number;\n    value: number;\n}\n\ninterface Portfolio {\n    success: boolean;\n    portfolio: {\n        userId: number;\n        firstName: string;\n        lastName: string;\n        cash: number;\n        netAssets: number;\n        totalGain: number;\n        portfolioHolding: PortfolioHolding[];\n    }\n}\n\nconst toCommas: (value: string) => string = (value) => {\n    return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\ninterface Props {\n    firstName: string;\n    lastName: string;\n    token: string; \n}\n\nconst Balance: React.FC<Props> = props => {\n    const classes = useStyles();\n\n\n    const [portfolio, setPortfolio] = React.useState<Portfolio | null>(null);\n\n    React.useEffect(() => {\n        HTTPClient\n            .getUserPortfolio(props.token)\n            .then(response => setPortfolio(response));\n    }, []);\n    \n\n    return (\n        <React.Fragment>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Welcome! {portfolio === null ? \"\" : portfolio.portfolio.firstName + \" \" + portfolio.portfolio.lastName} \n            </Typography>\n            <Typography component=\"h2\" variant=\"subtitle1\" color=\"primary\" gutterBottom>\n                Your Current Account Value\n            </Typography>\n            <Typography component=\"p\" variant=\"h4\">\n                {/* -- TODO --  */}\n                {portfolio === null ? \"\" : toCommas(portfolio.portfolio.netAssets.toFixed(2))}\n            </Typography>\n            <Typography color=\"textSecondary\" className={classes.depositContext}>\n                on 15 March, 2019\n            </Typography>\n            <div>\n                <Link color=\"primary\">\n                    View balance\n                </Link>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default Balance; ","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { TableRow, Typography } from '@material-ui/core';\n\nconst fatchData: (id: number, symbol: string, lastPrice: number, change: number, changePercentage: number) => Object = (id, symbol, lastPrice, change, changePercentage) => {\n    return { id, symbol, lastPrice, change, changePercentage };\n};\n\ninterface Data {\n    id: number;\n    symbol: string;\n    lastPrice: number;\n    change: number;\n    changePercentage: number;\n}\n\nconst rows: Data[] = [\n    {id: 0, symbol: 'DOW', lastPrice: 100, change: 1, changePercentage: 1},\n    {id: 1, symbol: 'NASDAQ', lastPrice: 100, change: 1, changePercentage: 1},\n    {id: 2, symbol: 'S&P 500', lastPrice: 100, change: 1, changePercentage: 1},\n];\n\n\nconst useStyles: (props?: any) => Record<any, string>  = makeStyles(theme => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\n\nconst USMarket: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Market Snapshot\n            </Typography>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Symbol</TableCell>\n                        <TableCell>Last Price</TableCell>\n                        <TableCell>Change</TableCell>\n                        <TableCell align=\"right\">% Change</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell>{row.symbol}</TableCell>\n                            <TableCell align=\"right\">{row.lastPrice}</TableCell>\n                            <TableCell align=\"right\">{row.change}</TableCell>\n                            <TableCell align=\"right\">{row.changePercentage}%</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </React.Fragment>\n    );\n}\n\nexport default USMarket; ","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { TableRow, Typography } from '@material-ui/core';\n\nconst fatchData: (id: number, symbol: string, lastPrice: number, change: number, changePercentage: number) => Object = (id, symbol, lastPrice, change, changePercentage) => {\n    return { id, symbol, lastPrice, change, changePercentage };\n};\n\ninterface Data {\n    id: number;\n    subject: string;\n    value: number;\n}\n\nconst rows: Data[] = [\n    {id: 0, subject: 'Net Account Value', value: 100},\n    {id: 1, subject: 'Day\\'s Gain', value: 100},\n    {id: 2, subject: 'Cash Purchasing Power', value: 100},\n];\n\n\nconst useStyles: (props?: any) => Record<any, string>  = makeStyles(theme => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\n\nconst USMarket: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Account Snapshot\n            </Typography>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Subject</TableCell>\n                        <TableCell align=\"right\">Current Value</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell>{row.subject}</TableCell>\n                            <TableCell align=\"right\">${row.value}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </React.Fragment>\n    );\n}\n\nexport default USMarket; ","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { TableRow, Typography } from '@material-ui/core';\nimport Chart from 'react-google-charts';\n\nconst useStyles: (props?: any) => Record<any, string> = makeStyles(theme => ({\n}));\n\n\nconst ComponentUSMarketChart: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Market Snapshot {/* -- TODO -- */}\n            </Typography>\n\n            <Chart\n                width={'600px'}\n                height={'250px'}\n                chartType=\"Line\"\n                loader={<div>Loading Chart</div>}\n                data={[\n                    [\n                        'Time',\n                        'NASDAQ',\n                        'DOW',\n                        'S&P 500',\n                    ],\n                    [1, 37.8, 80.8, 41.8],\n                    [2, 30.9, 69.5, 32.4],\n                    [3, 25.4, 57, 25.7],\n                    [4, 11.7, 18.8, 10.5],\n                    [5, 11.9, 17.6, 10.4],\n                    [6, 8.8, 13.6, 7.7],\n                    [7, 7.6, 12.3, 9.6],\n                    [8, 12.3, 29.2, 10.6],\n                    [9, 16.9, 42.9, 14.8],\n                    [10, 12.8, 30.9, 11.6],\n                    [11, 5.3, 7.9, 4.7],\n                    [12, 6.6, 8.4, 5.2],\n                    [13, 4.8, 6.3, 3.6],\n                    [14, 4.2, 6.2, 3.4],\n                ]}\n                rootProps={{ 'data-testid': '3' }}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default ComponentUSMarketChart; ","import React from 'react';\nimport clsx from 'clsx';\nimport { Container, Grid, Paper, } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Copyright from '../../Copyright/Copyright';\nimport ComponentBalance from '../Component/ComponentBalance';\nimport ComponentUSMarket from '../Component/ComponentUSMarket';\nimport ComponentAccountSnapshot from '../Component/ComponentAccountSnapshot';\nimport ComponentUSMarketChart from '../Component/ComponentUSMarketChart';\nimport HTTPClient from '../../HTTPClient/HTTPClient';\n\nconst useStyles = makeStyles(theme => ({\n\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n}));\n\n\ninterface Props {\n    setPage: React.Dispatch<React.SetStateAction<string>>;\n    id: number;\n    token: string;\n    firstName: string;\n    lastName: string;\n}\n\nconst WindowDashboard: React.FC<Props> = props => {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n\n    console.log(\"Window Dashboard - Render\")\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={4} lg={4}>\n                        <Paper className={fixedHeightPaper}>\n                            <ComponentBalance\n                                firstName={props.firstName}\n                                lastName={props.lastName}\n                                token={props.token}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={8} lg={8}>\n                        <Paper className={fixedHeightPaper}>\n                            <ComponentAccountSnapshot />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={8} lg={8}>\n                        <Paper className={fixedHeightPaper}>\n                            <ComponentUSMarketChart />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={4} lg={4}>\n                        <Paper className={fixedHeightPaper}>\n                            <ComponentUSMarket />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n            <Copyright />\n        </main>\n    );\n}\n\nexport default WindowDashboard; ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\nimport HTTPClient from '../../HTTPClient/HTTPClient';\n\ninterface Props {\n    setWindow: React.Dispatch<React.SetStateAction<string>>;\n    token: string;\n}\n\nconst useStyles: (props?: any) => Record<any, string> = makeStyles(theme => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n    valueUp: {\n        color: '#43A047',\n    },\n    valueDown: {\n        color: '#FF0000',\n    },\n}));\n\ninterface PortfolioHolding {\n    symbol: string;\n    lastPrice: number;\n    change: number;\n    changePercentage: number;\n    quantity: number;\n    pricePaid: number;\n    dayGain: number;\n    totalGain: number;\n    totalGainPercentage: number;\n    value: number;\n}\n\ninterface Portfolio {\n    success: boolean;\n    portfolio: {\n        userId: number;\n        firstName: string;\n        lastName: string;\n        cash: number;\n        netAssets: number;\n        totalGain: number;\n        portfolioHolding: PortfolioHolding[];\n    }\n}\n\nconst toCommas: (value: string) => string = (value) => {\n    return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst ComponentPortfolio: React.FC<Props> = props => {\n    const classes = useStyles();\n    const [portfolio, setPortfolio] = React.useState<Portfolio | null>(null);\n\n    React.useEffect(() => {\n        HTTPClient\n            .getUserPortfolio(props.token)\n            .then(response => setPortfolio(response));\n    }, []);\n\n    let portfolioHoldingItems: PortfolioHolding[] = [];\n    let name = '';\n    if (portfolio !== null) {\n        name = portfolio.portfolio.firstName + ' ' + portfolio.portfolio.lastName + '\\'s ';\n        portfolioHoldingItems = portfolio.portfolio.portfolioHolding;\n    }\n\n    return (\n        <React.Fragment>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                {name}Portfolio\n            </Typography>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Symbol</TableCell>\n                        <TableCell align=\"right\">Last Price $</TableCell>\n                        <TableCell align=\"right\">Change $</TableCell>\n                        <TableCell align=\"right\">Change %</TableCell>\n                        <TableCell align=\"right\">Qty #</TableCell>\n                        <TableCell align=\"right\">Price Paid $</TableCell>\n                        <TableCell align=\"right\">Day's Gain $</TableCell>\n                        <TableCell align=\"right\">Total Gain $</TableCell>\n                        <TableCell align=\"right\">Total Gain %</TableCell>\n                        <TableCell align=\"right\">Value $</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {portfolioHoldingItems.map(holding => (\n                        <TableRow key={holding.symbol}>\n                            <TableCell>{holding.symbol}</TableCell>\n                            <TableCell align=\"right\">\n                                {toCommas(holding.lastPrice.toFixed(2))}\n                            </TableCell>\n                            <TableCell align=\"right\" className={holding.change > 0 ? classes.valueUp : classes.valueDown}>\n                                {toCommas(Math.abs(holding.change).toFixed(2))}\n                            </TableCell>\n                            <TableCell align=\"right\" className={holding.changePercentage > 0 ? classes.valueUp : classes.valueDown}>\n                                {toCommas(Math.abs(holding.changePercentage).toFixed(2))}%\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {toCommas(holding.quantity.toFixed(0))}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {toCommas(holding.pricePaid.toFixed(2))}</TableCell>\n                            <TableCell align=\"right\" className={holding.dayGain > 0 ? classes.valueUp : classes.valueDown}>\n                                {toCommas(Math.abs(holding.dayGain).toFixed(2))}\n                            </TableCell>\n                            <TableCell align=\"right\" className={holding.totalGain > 0 ? classes.valueUp : classes.valueDown}>\n                                {toCommas(Math.abs(holding.totalGain).toFixed(2))}\n                            </TableCell>\n                            <TableCell align=\"right\" className={holding.totalGainPercentage > 0 ? classes.valueUp : classes.valueDown}>\n                                {toCommas(Math.abs(holding.totalGainPercentage).toFixed(2))}%\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {toCommas(holding.value.toFixed(2))}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </React.Fragment>\n    );\n}\n\nexport default ComponentPortfolio; ","import React from 'react';\nimport clsx from 'clsx';\nimport { Container, Grid, Paper, } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Copyright from '../../Copyright/Copyright';\nimport ComponentBalance from '../Component/ComponentBalance';\nimport ComponentUSMarket from '../Component/ComponentUSMarket';\nimport ComponentAccountSnapshot from '../Component/ComponentAccountSnapshot';\nimport ComponentUSMarketChart from '../Component/ComponentUSMarketChart';\nimport ComponentPortfolio from '../Component/ComponentPortfolio';\n\nconst useStyles = makeStyles(theme => ({\n\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n}));\n\ninterface Props {\n    setWindow: React.Dispatch<React.SetStateAction<string>>;\n    token: string;\n}\n\nconst WindowPortfolio: React.FC<Props> = props => {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    \n    console.log(\"Window Portfolio - Render\")\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <ComponentPortfolio\n                                setWindow={props.setWindow}\n                                token={props.token}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n            <Copyright />\n        </main>\n    );\n}\n\nexport default WindowPortfolio; ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Snackbar, SnackbarContent, IconButton, Button, MenuItem, TextField, Typography } from '@material-ui/core';\nimport HTTPClient from '../../HTTPClient/HTTPClient';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { green } from '@material-ui/core/colors';\n\ninterface Props {\n    setWindow: React.Dispatch<React.SetStateAction<string>>;\n    token: string;\n    symbol: string;\n    setSymbol: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst useStyles: (props?: any) => Record<any, string> = makeStyles(theme => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginTop: theme.spacing(3),\n    },\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    icon: {\n        fontSize: 20,\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nconst actionOptions = [\n    {\n        value: 'buy',\n        label: 'Buy',\n    },\n    {\n        value: 'sale',\n        label: 'Sale',\n    },\n]\n\nconst ComponentTrade: React.FC<Props> = props => {\n    const classes = useStyles();\n\n    const [action, setAction] = React.useState('buy');\n    const [quantity, setQuantity] = React.useState(0);\n    const [successOpen, setSuccessOpen] = React.useState(false);\n    const [errorOpen, setErrorOpen] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState<string>('');\n\n\n\n    const tradeHandler: (event: React.MouseEvent<any>) => void = async (event) => {\n        event.preventDefault();\n\n        let response = await HTTPClient.postOrder(props.token, props.symbol, quantity, action === 'sale' ? true : false);\n        console.log(response);\n        if (response.success) {\n            setSuccessOpen(true);\n            setQuantity(0);\n            props.setSymbol('');\n        }\n        else {\n            console.log(response.cause === 'insufficient-shares');\n            switch (response.cause) {\n                case 'invalid-token':\n                    setErrorMessage('Please sign in again');\n                    break; \n                case 'invalid-symbol':\n                    setErrorMessage('The stock symbol is invalid.');\n                    break; \n                case 'insufficient-shares':\n                    setErrorMessage('Insufficient shares in your account.');\n                    break; \n                case 'insufficient-funds':\n                    setErrorMessage('Insufficient fund in your account.');\n                    break; \n                default:\n                    setErrorMessage('Fail to place order.');\n                    break; \n            }\n            setErrorOpen(true);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={successOpen}\n                autoHideDuration={9000}\n                onClose={() => { setSuccessOpen(false) }}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    message={\n                        <span id=\"client-snackbar\" className={classes.message}>\n                            <CheckCircleIcon className={classes.icon}\n                            />\n                            The order has been successfully placed.\n                        </span>\n                    }\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={() => { setSuccessOpen(false) }}>\n                            <CloseIcon className={classes.icon} />\n                        </IconButton>,\n                    ]}\n                />\n            </ Snackbar>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={errorOpen}\n                autoHideDuration={9000}\n                onClose={() => { setErrorOpen(false) }}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    message={\n                        <span id=\"client-snackbar\" className={classes.message}>\n                            <ErrorIcon className={classes.icon}\n                            />\n                            {errorMessage}\n                        </span>\n                    }\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={() => { setErrorOpen(false) }}>\n                            <CloseIcon className={classes.icon} />\n                        </IconButton>,\n                    ]}\n                />\n            </ Snackbar>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Stock Trade\n            </Typography>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n                <TextField\n                    id=\"outlined-symbol\"\n                    label=\"Stock Symbol\"\n                    className={classes.textField}\n                    fullWidth\n                    value={props.symbol}\n                    onChange={event => { props.setSymbol(event.target.value) }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    select\n                    id=\"outlined-action\"\n                    label=\"Action\"\n                    className={classes.textField}\n                    fullWidth\n                    value={action}\n                    onChange={event => { setAction(event.target.value) }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                >\n                    {actionOptions.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"outlined-quantity\"\n                    label=\"Quantity\"\n                    className={classes.textField}\n                    fullWidth\n                    value={quantity}\n                    onChange={event => { setQuantity(parseInt(event.target.value)) }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-price-type\"\n                    label=\"Price Type\"\n                    className={classes.textField}\n                    disabled={true}\n                    fullWidth\n                    value={\"Market\"}\n                    onChange={() => { }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-duration\"\n                    label=\"Duration\"\n                    className={classes.textField}\n                    disabled={true}\n                    fullWidth\n                    value={\"Good for Day\"}\n                    onChange={() => { }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <Button\n                    fullWidth\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    size=\"large\"\n                    className={classes.button}\n                    onClick={tradeHandler}\n                >\n                    Trade\n                </Button>\n            </form>\n        </React.Fragment>\n    );\n}\n\nexport default ComponentTrade; ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemText, Divider, GridList, Typography } from '@material-ui/core';\nimport HTTPClient from '../../HTTPClient/HTTPClient';\n\ninterface Props {\n    token: string;\n    symbol: string;\n}\n\nconst useStyles: (props?: any) => Record<any, string> = makeStyles(theme => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginTop: theme.spacing(3),\n    },\n    listItemText: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    }\n}));\n\ninterface StockInfo {\n    stockQuote: {\n        symbol: string,\n        companyName: string,\n        primaryExchange: string,\n        latestPrice: number,\n        previousClose: number,\n        change: number,\n        changePercent: number,\n        week52Low: number,\n        week52High: number,\n        isUSMarketOpen: boolean\n    },\n    stockStats: {\n        marketcap: number,\n        ttmEPS: number,\n        peRatio: number,\n        beta: number\n    }\n}\n\nconst ComponentTradeData: React.FC<Props> = props => {\n    const classes = useStyles();\n\n    const [stockInfo, setStateInfo] = React.useState<StockInfo | null>(null);\n\n    React.useEffect(() => {\n        HTTPClient\n            .getStockInfo(props.token, props.symbol)\n            .then(response => setStateInfo(response));\n    }, [props.symbol]);\n\n    return (\n        <React.Fragment>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Information\n            </Typography>\n            <GridList \n                className={classes.gridList} \n                cols={2}\n                spacing={20}\n                cellHeight={'auto'}\n            >\n                {/* -- LEFT LIST -- */}\n                <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n                    <ListItem>\n                        <ListItemText primary=\"Symbol\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.symbol} \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"Compnay\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.companyName}  \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"Exchange\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.primaryExchange}  \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                        <ListItemText primary=\"P/E (TTM)\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockStats.peRatio}  \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"EPS (TTM)\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockStats.ttmEPS}  \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"Beta\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockStats.beta}  \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"Market Capitalization\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockStats.marketcap}  \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                </List>\n\n                {/* -- RIGHT LIST -- */}\n                <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n                    <ListItem>\n                        <ListItemText primary=\"Price\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.latestPrice} \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"Previous Close\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.previousClose} \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"Change $\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.change} \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"Change %\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.changePercent} \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                        <ListItemText primary=\"52 Week Low\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.week52Low} \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary=\"52 Week High\" />\n                        <ListItemText \n                            secondary={stockInfo === null? \"NOT AVALIABLE\" : stockInfo.stockQuote.week52High} \n                            className={classes.listItemText} \n                        />\n                    </ListItem>\n                </List>\n            </GridList>\n        </React.Fragment>\n    );\n}\n\nexport default ComponentTradeData; ","import React from 'react';\nimport clsx from 'clsx';\nimport { Container, Grid, Paper, } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Copyright from '../../Copyright/Copyright';\nimport ComponentTrade from '../Component/ComponentTrade';\nimport ComponentTradeData from '../Component/ComponentTradeData';\n\nconst useStyles = makeStyles(theme => ({\n\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: '70vh',\n    },\n}));\n\ninterface Props {\n    setWindow: React.Dispatch<React.SetStateAction<string>>;\n    token: string;\n}\n\nconst WindowDashboard: React.FC<Props> = props => {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    const [symbol, setSymbol] = React.useState('');\n\n    \n\n    console.log(\"Window Dashboard - Render\")\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={5} lg={5}>\n                        <Paper className={fixedHeightPaper}>\n                            <ComponentTrade\n                                setWindow={props.setWindow}\n                                token={props.token}\n                                symbol={symbol}\n                                setSymbol={setSymbol}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={7} lg={7}>\n                        <Paper className={fixedHeightPaper}>\n                            <ComponentTradeData\n                                token={props.token}\n                                symbol={symbol}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n            <Copyright />\n        </main>\n    );\n}\n\nexport default WindowDashboard; ","import React from 'react';\nimport clsx from 'clsx';\nimport { CssBaseline, AppBar, Toolbar, IconButton, Typography, Badge, Drawer, Divider, List, Container, Grid, Paper, } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Menu from './Menu';\nimport WindowDashboard from './Windows/WindowDashboard';\nimport WindowPortfolio from './Windows/WindowPortfolio';\nimport WindowTrade from './Windows/WindowTrade';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        background: '#FFFFFF',\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    iconButton: {\n        color: '#FFFFFF',\n    },\n    drawerPaper: {\n        backgroundImage: 'url(./img/menu.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'left',\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n}));\n\n\ninterface Props {\n    setPage: React.Dispatch<React.SetStateAction<string>>;\n    id: number;\n    token: string;\n    firstName: string;\n    lastName: string;\n}\n\nconst Dashboard: React.FC<Props> = props => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const [window, setWindow] = React.useState('trade');\n\n    console.log(\"Dashboard - Render\")\n\n    const appBarTitleSelectionHandler: () => string = () => {\n        switch (window) {\n            case 'dashboard':\n                return ('Dashboard');\n            case 'portfolio':\n                return ('Portfolio');\n            case 'quote':\n                return ('Stock Quote');\n            case 'trade':\n                return ('Trade');\n            case 'order':\n                return ('Current Orders');\n            case 'transaction':\n                return ('Past Transactions');\n            default:\n                return ('Dashboard');\n        }\n    }\n\n    const windowSelectionHandler = () => {\n        switch (window) {\n            case 'dashboard':\n                return (\n                    <WindowDashboard\n                        setPage={props.setPage}\n                        id={props.id}\n                        token={props.token}\n                        firstName={props.firstName}\n                        lastName={props.lastName}\n                    />\n                );\n            case 'portfolio':\n                return (\n                    <WindowPortfolio\n                        setWindow={setWindow}\n                        token={props.token}\n                    />\n                );\n            case 'trade':\n                return (\n                    <WindowTrade\n                        setWindow={setWindow}\n                        token={props.token}\n                    />\n                );\n            default:\n                return (\n                    <WindowDashboard\n                        setPage={props.setPage}\n                        id={props.id}\n                        token={props.token}\n                        firstName={props.firstName}\n                        lastName={props.lastName}\n                    />\n                );\n        };\n    };\n\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                color=\"inherit\"\n                position=\"absolute\"\n                className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        {appBarTitleSelectionHandler()}\n                    </Typography>\n                    <IconButton color=\"inherit\">\n                        <Badge badgeContent={4} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton className={classes.iconButton} onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <Menu\n                        setWindow={setWindow}\n                    />\n                </List>\n                <Divider />\n            </Drawer>\n            {windowSelectionHandler()}\n        </div>\n    );\n}\n\nexport default Dashboard; ","import React from 'react';\nimport SignIn from './SignIn/SignIn';\nimport SignUp from './SignUp/SignUp';\nimport ForgotPassword from './ForgotPassword/ForgotPassword';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App: React.FC = () => {\n\n    const [page, setPage] = React.useState<string>('sign-in');\n    const [id, setId] = React.useState<number>(0);\n    const [token, setToken] = React.useState<string>('');\n    const [firstName, setFirstName] = React.useState<string>('');\n    const [lastName, setLastName] = React.useState<string>('');\n\n    const getPageHandler: () => JSX.Element = () => {\n        switch(page) {\n            case 'sign-in':\n                return (\n                    <SignIn \n                        setPage={setPage} \n                        setId={setId} \n                        setToken={setToken}\n                        setFirstName={setFirstName}\n                        setLastName={setLastName}\n                    />\n                ); \n            case 'sign-up':\n                return (\n                    <SignUp \n                        setPage={setPage} \n                        setId={setId} \n                        setToken={setToken}\n                        setFirstName={setFirstName}\n                        setLastName={setLastName}\n                    />\n                ); \n            case 'forgot-password':\n                return <ForgotPassword setPage={setPage}/>;\n            case 'dashboard':\n                return (\n                    <Dashboard \n                        setPage={setPage}\n                        id={id}\n                        token={token}\n                        firstName={firstName}\n                        lastName={lastName}\n                    /> \n                );\n            default:\n                return (\n                    <SignIn \n                        setPage={setPage} \n                        setId={setId} \n                        setToken={setToken}\n                        setFirstName={setFirstName}\n                        setLastName={setLastName}\n                    />\n                ); \n        }\n    }\n\n    return (\n        <div>\n            {getPageHandler()}\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}